{"ast":null,"code":"var _jsxFileName = \"/Users/gautamthakur/Documents/CLO-SET CONNECT Store/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setKeyword } from \"../features/contentSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n  const dispatch = useDispatch();\n  const filters = useSelector(s => s.content.filters);\n  const [value, setValue] = useState(filters.keyword || \"\");\n  useEffect(() => {\n    setValue(filters.keyword || \"\");\n  }, [filters.keyword]);\n  const updateUrl = newKeyword => {\n    const params = new URLSearchParams();\n    if (newKeyword) params.set(\"q\", newKeyword);\n    if (filters.pricing.paid) params.set(\"paid\", \"1\");\n    if (filters.pricing.free) params.set(\"free\", \"1\");\n    if (filters.pricing.viewOnly) params.set(\"viewOnly\", \"1\");\n    if (filters.category && filters.category !== \"All\") params.set(\"category\", filters.category);\n    const newUrl = window.location.pathname + \"?\" + params.toString();\n    window.history.replaceState(null, \"\", newUrl);\n  };\n  const onChange = e => {\n    const newValue = e.target.value;\n    setValue(newValue);\n    dispatch(setKeyword(newValue.trim()));\n    updateUrl(newValue.trim());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-row\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search-input\",\n      placeholder: \"Search for Avatars\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"MfQ4wpaUlTy2WWrPWy5yFg2mgBU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setKeyword","jsxDEV","_jsxDEV","SearchBar","_s","dispatch","filters","s","content","value","setValue","keyword","updateUrl","newKeyword","params","URLSearchParams","set","pricing","paid","free","viewOnly","category","newUrl","window","location","pathname","toString","history","replaceState","onChange","e","newValue","target","trim","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gautamthakur/Documents/CLO-SET CONNECT Store/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setKeyword } from \"../features/contentSlice\";\n\nexport default function SearchBar() {\n  const dispatch = useDispatch();\n  const filters = useSelector((s) => s.content.filters);\n  const [value, setValue] = useState(filters.keyword || \"\");\n\n  useEffect(() => {\n    setValue(filters.keyword || \"\");\n  }, [filters.keyword]);\n\n  const updateUrl = (newKeyword) => {\n    const params = new URLSearchParams();\n\n    if (newKeyword) params.set(\"q\", newKeyword);\n    if (filters.pricing.paid) params.set(\"paid\", \"1\");\n    if (filters.pricing.free) params.set(\"free\", \"1\");\n    if (filters.pricing.viewOnly) params.set(\"viewOnly\", \"1\");\n    if (filters.category && filters.category !== \"All\")\n      params.set(\"category\", filters.category);\n\n    const newUrl = window.location.pathname + \"?\" + params.toString();\n    window.history.replaceState(null, \"\", newUrl);\n  };\n\n  const onChange = (e) => {\n    const newValue = e.target.value;\n    setValue(newValue);\n    dispatch(setKeyword(newValue.trim()));\n    updateUrl(newValue.trim());\n  };\n\n  return (\n    <div className=\"search-row\">\n      \n      <input\n        className=\"search-input\"\n        placeholder=\"Search for Avatars\"\n        value={value}\n        onChange={onChange}\n      />\n      \n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,OAAO,GAAGP,WAAW,CAAEQ,CAAC,IAAKA,CAAC,CAACC,OAAO,CAACF,OAAO,CAAC;EACrD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACU,OAAO,CAACK,OAAO,IAAI,EAAE,CAAC;EAEzDd,SAAS,CAAC,MAAM;IACda,QAAQ,CAACJ,OAAO,CAACK,OAAO,IAAI,EAAE,CAAC;EACjC,CAAC,EAAE,CAACL,OAAO,CAACK,OAAO,CAAC,CAAC;EAErB,MAAMC,SAAS,GAAIC,UAAU,IAAK;IAChC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEpC,IAAIF,UAAU,EAAEC,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEH,UAAU,CAAC;IAC3C,IAAIP,OAAO,CAACW,OAAO,CAACC,IAAI,EAAEJ,MAAM,CAACE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IACjD,IAAIV,OAAO,CAACW,OAAO,CAACE,IAAI,EAAEL,MAAM,CAACE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IACjD,IAAIV,OAAO,CAACW,OAAO,CAACG,QAAQ,EAAEN,MAAM,CAACE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC;IACzD,IAAIV,OAAO,CAACe,QAAQ,IAAIf,OAAO,CAACe,QAAQ,KAAK,KAAK,EAChDP,MAAM,CAACE,GAAG,CAAC,UAAU,EAAEV,OAAO,CAACe,QAAQ,CAAC;IAE1C,MAAMC,MAAM,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,GAAG,GAAGX,MAAM,CAACY,QAAQ,CAAC,CAAC;IACjEH,MAAM,CAACI,OAAO,CAACC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAEN,MAAM,CAAC;EAC/C,CAAC;EAED,MAAMO,QAAQ,GAAIC,CAAC,IAAK;IACtB,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACvB,KAAK;IAC/BC,QAAQ,CAACqB,QAAQ,CAAC;IAClB1B,QAAQ,CAACL,UAAU,CAAC+B,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrCrB,SAAS,CAACmB,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,YAAY;IAAAC,QAAA,eAEzBjC,OAAA;MACEgC,SAAS,EAAC,cAAc;MACxBE,WAAW,EAAC,oBAAoB;MAChC3B,KAAK,EAAEA,KAAM;MACboB,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACpC,EAAA,CA1CuBD,SAAS;EAAA,QACdL,WAAW,EACZC,WAAW;AAAA;AAAA0C,EAAA,GAFLtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}