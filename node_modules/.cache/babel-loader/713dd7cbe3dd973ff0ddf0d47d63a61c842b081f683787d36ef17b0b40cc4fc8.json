{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst API_URL = \"https://closet-recruiting-api.azurewebsites.net/api/data\";\nexport const fetchContents = createAsyncThunk(\"content/fetchContents\", async () => {\n  const res = await fetch(API_URL);\n  if (!res.ok) throw new Error(\"Failed to fetch data\");\n  return await res.json();\n});\nconst contentSlice = createSlice({\n  name: \"content\",\n  initialState: {\n    items: [],\n    status: \"idle\",\n    error: null,\n    filters: {\n      pricing: {\n        paid: false,\n        free: false,\n        viewOnly: false,\n        range: [0, 999]\n      },\n      keyword: \"\",\n      category: \"All\",\n      sort: \"name\"\n    }\n  },\n  reducers: {\n    setPricing(state, action) {\n      state.filters.pricing = {\n        ...state.filters.pricing,\n        ...action.payload\n      };\n    },\n    setKeyword(state, action) {\n      state.filters.keyword = action.payload;\n    },\n    setCategory(state, action) {\n      state.filters.category = action.payload;\n    },\n    resetFilters(state) {\n      state.filters = {\n        pricing: {\n          paid: false,\n          free: false,\n          viewOnly: false,\n          range: [0, 999]\n        },\n        keyword: \"\",\n        category: \"All\",\n        sort: \"name\"\n      };\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchContents.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchContents.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items = action.payload;\n    }).addCase(fetchContents.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  setPricing,\n  setKeyword,\n  setCategory,\n  resetFilters,\n  setFiltersFromUrl\n} = contentSlice.actions;\nexport default contentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","fetchContents","res","fetch","ok","Error","json","contentSlice","name","initialState","items","status","error","filters","pricing","paid","free","viewOnly","range","keyword","category","sort","reducers","setPricing","state","action","payload","setKeyword","setCategory","resetFilters","extraReducers","builder","addCase","pending","fulfilled","rejected","message","setFiltersFromUrl","actions","reducer"],"sources":["/Users/gautamthakur/Documents/closet-store-starter/src/features/contentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst API_URL = \"https://closet-recruiting-api.azurewebsites.net/api/data\";\n\nexport const fetchContents = createAsyncThunk(\"content/fetchContents\", async () => {\n  const res = await fetch(API_URL);\n  if (!res.ok) throw new Error(\"Failed to fetch data\");\n  return await res.json();\n});\n\nconst contentSlice = createSlice({\n  name: \"content\",\n  initialState: {\n    items: [],\n    status: \"idle\",\n    error: null,\n    filters: {\n      pricing: { paid: false, free: false, viewOnly: false, range: [0, 999] },\n      keyword: \"\",\n      category: \"All\",\n      sort: \"name\",\n    },\n  },\n  reducers: {\n    setPricing(state, action) {\n      state.filters.pricing = { ...state.filters.pricing, ...action.payload };\n    },\n    setKeyword(state, action) {\n      state.filters.keyword = action.payload;\n    },\n    setCategory(state, action) {\n      state.filters.category = action.payload;\n    },\n    resetFilters(state) {\n      state.filters = {\n        pricing: { paid: false, free: false, viewOnly: false, range: [0, 999] },\n        keyword: \"\",\n        category: \"All\",\n        sort: \"name\",\n      };\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchContents.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchContents.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.items = action.payload;\n      })\n      .addCase(fetchContents.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { setPricing, setKeyword, setCategory, resetFilters, setFiltersFromUrl } = contentSlice.actions;\nexport default contentSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,OAAO,GAAG,0DAA0D;AAE1E,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,uBAAuB,EAAE,YAAY;EACjF,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;EAChC,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACpD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGT,WAAW,CAAC;EAC/BU,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;MACPC,OAAO,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE,KAAK;QAAEC,QAAQ,EAAE,KAAK;QAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG;MAAE,CAAC;MACvEC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACX,OAAO,CAACC,OAAO,GAAG;QAAE,GAAGU,KAAK,CAACX,OAAO,CAACC,OAAO;QAAE,GAAGW,MAAM,CAACC;MAAQ,CAAC;IACzE,CAAC;IACDC,UAAUA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACX,OAAO,CAACM,OAAO,GAAGM,MAAM,CAACC,OAAO;IACxC,CAAC;IACDE,WAAWA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACX,OAAO,CAACO,QAAQ,GAAGK,MAAM,CAACC,OAAO;IACzC,CAAC;IACDG,YAAYA,CAACL,KAAK,EAAE;MAClBA,KAAK,CAACX,OAAO,GAAG;QACdC,OAAO,EAAE;UAAEC,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAE,KAAK;UAAEC,QAAQ,EAAE,KAAK;UAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG;QAAE,CAAC;QACvEC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE;MACR,CAAC;IACH;EACF,CAAC;EACDS,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAAC/B,aAAa,CAACgC,OAAO,EAAGT,KAAK,IAAK;MACzCA,KAAK,CAACb,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDqB,OAAO,CAAC/B,aAAa,CAACiC,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACb,MAAM,GAAG,WAAW;MAC1Ba,KAAK,CAACd,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDM,OAAO,CAAC/B,aAAa,CAACkC,QAAQ,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACb,MAAM,GAAG,QAAQ;MACvBa,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACwB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,UAAU;EAAEI,UAAU;EAAEC,WAAW;EAAEC,YAAY;EAAEQ;AAAkB,CAAC,GAAG9B,YAAY,CAAC+B,OAAO;AAC5G,eAAe/B,YAAY,CAACgC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}