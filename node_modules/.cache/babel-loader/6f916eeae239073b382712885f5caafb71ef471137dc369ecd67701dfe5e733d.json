{"ast":null,"code":"var _jsxFileName = \"/Users/gautamthakur/Documents/closet-store-starter/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setKeyword } from \"../features/contentSlice\";\n\n/**\n * Keyword search component.\n * Updates Redux state and updates URL for persistence.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n  const dispatch = useDispatch();\n  const keyword = useSelector(s => s.content.filters.keyword);\n  const [value, setValue] = useState(keyword || \"\");\n  useEffect(() => {\n    setValue(keyword || \"\");\n  }, [keyword]);\n  function updateUrl(filters) {\n    const q = new URLSearchParams();\n    if (filters.keyword) q.set(\"q\", filters.keyword);\n    const {\n      paid,\n      free,\n      viewOnly\n    } = filters.pricing;\n    if (paid) q.set(\"paid\", \"1\");\n    if (free) q.set(\"free\", \"1\");\n    if (viewOnly) q.set(\"viewOnly\", \"1\");\n    const newUrl = window.location.pathname + \"?\" + q.toString();\n    window.history.replaceState(null, \"\", newUrl);\n  }\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(setKeyword(value.trim()));\n    // update the URL using current global filters\n    const currentFilters = JSON.parse(JSON.stringify((dispatch, getState) => {})); // placeholder not used\n    // Instead read current filters from store\n    const storeFilters = window.__REDUX_STORE_SNAPSHOT__ || null;\n    // We'll build updated filters using existing URL read because we don't have store here\n    // Simpler: read query then update q param\n    const params = new URLSearchParams(window.location.search);\n    if (value) params.set(\"q\", value);else params.delete(\"q\");\n    const newUrl = window.location.pathname + \"?\" + params.toString();\n    window.history.replaceState(null, \"\", newUrl);\n  };\n  const onChange = e => setValue(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search-row\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search-input\",\n      placeholder: \"Search for Avatars\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-btn\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"LQWdPHXAJ8MmBpYEay7/qA0xZLo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setKeyword","jsxDEV","_jsxDEV","SearchBar","_s","dispatch","keyword","s","content","filters","value","setValue","updateUrl","q","URLSearchParams","set","paid","free","viewOnly","pricing","newUrl","window","location","pathname","toString","history","replaceState","onSubmit","e","preventDefault","trim","currentFilters","JSON","parse","stringify","getState","storeFilters","__REDUX_STORE_SNAPSHOT__","params","search","delete","onChange","target","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/gautamthakur/Documents/closet-store-starter/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setKeyword } from \"../features/contentSlice\";\n\n/**\n * Keyword search component.\n * Updates Redux state and updates URL for persistence.\n */\n\nexport default function SearchBar() {\n  const dispatch = useDispatch();\n  const keyword = useSelector((s) => s.content.filters.keyword);\n  const [value, setValue] = useState(keyword || \"\");\n\n  useEffect(() => {\n    setValue(keyword || \"\");\n  }, [keyword]);\n\n  function updateUrl(filters) {\n    const q = new URLSearchParams();\n    if (filters.keyword) q.set(\"q\", filters.keyword);\n    const { paid, free, viewOnly } = filters.pricing;\n    if (paid) q.set(\"paid\", \"1\");\n    if (free) q.set(\"free\", \"1\");\n    if (viewOnly) q.set(\"viewOnly\", \"1\");\n    const newUrl = window.location.pathname + \"?\" + q.toString();\n    window.history.replaceState(null, \"\", newUrl);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(setKeyword(value.trim()));\n    // update the URL using current global filters\n    const currentFilters = JSON.parse(JSON.stringify((dispatch, getState) => {})); // placeholder not used\n    // Instead read current filters from store\n    const storeFilters = window.__REDUX_STORE_SNAPSHOT__ || null;\n    // We'll build updated filters using existing URL read because we don't have store here\n    // Simpler: read query then update q param\n    const params = new URLSearchParams(window.location.search);\n    if (value) params.set(\"q\", value);\n    else params.delete(\"q\");\n    const newUrl = window.location.pathname + \"?\" + params.toString();\n    window.history.replaceState(null, \"\", newUrl);\n  };\n\n  const onChange = (e) => setValue(e.target.value);\n\n  return (\n    <form className=\"search-row\" onSubmit={onSubmit}>\n      <input\n        className=\"search-input\"\n        placeholder=\"Search for Avatars\"\n        value={value}\n        onChange={onChange}\n      />\n      <button type=\"submit\" className=\"search-btn\">Search</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}